{"ast":null,"code":"var _jsxFileName = \"/Users/jackmitchell/Desktop/Personal-Website/Personal-Website/jack-mitchell-website/src/components/Projects.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"Projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"large-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Bullet Journal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 38\n        }, this), \" - June 2023\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Illustrated a map showcasing major cities across the United States, connected by edges. Employed Kruskal's Algorithm to determine a minimum spanning tree, utilizing the miles between cities as edge weights for optimal connectivity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"large-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Battlesalvo Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 38\n        }, this), \" - June 2023\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Designed and developed a battleship type game with customizable settings that could be played locally or connected to a server to play against another machine via JSONs and sockets. Designed an AI player to play against locally or play against another machine via the server.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"large-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Hex Game Artificial Intelligence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 38\n        }, this), \" - April 2023\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Developed an implementation of the Islands of Hex game, where players strive to form islands of their designated color on a hexagonal board. Implemented AI models using Alpha-Beta pruning and the Minimax algorithm to enable strategic competition between them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/jackmitchell/Desktop/Personal-Website/Personal-Website/jack-mitchell-website/src/components/Projects.js"],"sourcesContent":["import React from 'react';\n\nconst Projects = () => {\n  return (\n    <section id=\"Projects\">\n      <h2>Projects</h2>\n      <ul>\n          <li className=\"large-text\"><b>Bullet Journal</b> - June 2023</li>\n          <li>\n            <p>Illustrated a map showcasing major cities across the United States, connected by edges. Employed Kruskal's Algorithm to \n            determine a minimum spanning tree, utilizing the miles between cities as edge weights for optimal connectivity</p>\n          </li>\n          <li className=\"large-text\"><b>Battlesalvo Game</b> - June 2023</li>\n          <li>\n            <p>Designed and developed a battleship type game with customizable settings that could be played locally or\n              connected to a server to play against another machine via JSONs and sockets. Designed an AI player to play against locally or play against another machine via the server.</p>\n          </li>\n          <li className=\"large-text\"><b>Hex Game Artificial Intelligence</b> - April 2023</li>\n          <li>\n            <p>Developed an implementation of the Islands of Hex game, where players strive to form islands of their designated color on a hexagonal board. Implemented AI models using\n              Alpha-Beta pruning and the Minimax algorithm to enable strategic competition between them.</p>\n          </li>          \n        </ul>\n    </section>\n  );\n}\n\nexport default Projects;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA;IAASE,EAAE,EAAC,UAAU;IAAAC,QAAA,gBACpBH,OAAA;MAAAG,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBP,OAAA;MAAAG,QAAA,gBACIH,OAAA;QAAIQ,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAACH,OAAA;UAAAG,QAAA,EAAG;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAAY;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEP,OAAA;QAAAG,QAAA,eACEH,OAAA;UAAAG,QAAA,EAAG;QAC2G;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChH,CAAC,eACLP,OAAA;QAAIQ,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAACH,OAAA;UAAAG,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAAY;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEP,OAAA;QAAAG,QAAA,eACEH,OAAA;UAAAG,QAAA,EAAG;QACyK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9K,CAAC,eACLP,OAAA;QAAIQ,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAACH,OAAA;UAAAG,QAAA,EAAG;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,iBAAa;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpFP,OAAA;QAAAG,QAAA,eACEH,OAAA;UAAAG,QAAA,EAAG;QACyF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAE,EAAA,GAvBKR,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}